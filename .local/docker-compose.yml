name: csca-5028-final-project
services:
  database:
    image: postgres:14.3
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - ../.docker-data/.pg-data:/var/lib/postgresql/data
      - ../databases/movie-recaps/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  datastore:
    image: redis:7.4
    container_name: datastore
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ../.docker-data/.redis-data:/data
  data-collector:
    image: data-collector
    container_name: data-collector
    depends_on:
      - database
      - datastore
    restart: no
    build:
      context: ..
      dockerfile: ./applications/data-collector/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URI=postgresql+psycopg2://db_user:password@database:5432/movie_recaps_dev
      - REDIS_HOST=datastore
  data-analyzer:
    image: data-analyzer
    container_name: data-analyzer
    depends_on:
      - database
      - datastore
    restart: no
    build:
      context: ..
      dockerfile: ./applications/data-analyzer/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URI=postgresql+psycopg2://db_user:password@database:5432/movie_recaps_dev
      - REDIS_HOST=datastore
  rest-api:
    image: rest-api
    container_name: rest-api
    restart: always
    build:
      context: ..
      dockerfile: ./applications/rest-api/Dockerfile
    environment:
      - DATABASE_URI=postgresql+psycopg2://db_user:password@database:5432/movie_recaps_dev
    ports:
      - "8000:8000"
  web-ui:
    image: web-ui
    container_name: web-ui
    restart: always
    build:
      context: ..
      dockerfile: ./applications/web-ui/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
